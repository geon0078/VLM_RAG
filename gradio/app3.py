# app3.py

import gradio as gr
from models import load_all_models
from pipeline import run_hybrid_rag_pipeline # [수정] 새로 바뀐 함수 이름 임포트
from PIL import Image

# --- 1. 애플리케이션 시작 시 모델 로딩 ---
print(" App3 시작... 모든 모델 로딩을 시작합니다. ")
try:
    ALL_MODELS = load_all_models()
    print("✨ 모든 모델과 DB가 준비되었습니다. Gradio UI를 시작합니다. ✨")
    MODELS_LOADED = True
except Exception as e:
    print(f"🚨 치명적 오류: 모델 로딩에 실패했습니다. {e}")
    MODELS_LOADED = False

# --- 2. Gradio 인터페이스를 위한 래퍼(Wrapper) 함수 ---
# [수정] 호출할 함수 이름 변경
def gradio_interface_func(image, user_question, progress=gr.Progress(track_tqdm=True)):
    if not MODELS_LOADED:
        raise gr.Error("모델이 로드되지 않았습니다. 서버를 재시작해주세요.")
    
    return run_hybrid_rag_pipeline(image, user_question, ALL_MODELS, progress)

# --- 3. Gradio UI 구성 ---
with gr.Blocks(theme=gr.themes.Soft(), title="Advanced RAG") as demo:
    gr.Markdown("# Advanced RAG Pipeline 🚀")
    gr.Markdown("이미지 분석(Ovis)과 최종 답변(Qwen)에 서로 다른 모델을 사용하는 RAG 시스템입니다.")
    gr.Markdown("---")

    with gr.Row():
        with gr.Column(scale=1):
            gr.Markdown("## 1. 입력")
            image_input = gr.Image(type="pil", label="이미지 업로드")
            question_input = gr.Textbox(label="질문 입력", placeholder="이미지에 대해 질문하세요...")
            submit_button = gr.Button("답변 생성하기", variant="primary")

        with gr.Column(scale=2):
            gr.Markdown("## 2. 결과")
            answer_output = gr.Textbox(label="최종 답변 (Generated by Qwen)", interactive=False, lines=5, max_lines=15)
            with gr.Accordion("상세 과정 보기", open=False):
                desc_output = gr.Textbox(label="(1) 이미지 분석 결과 (by Ovis)", interactive=False, lines=5, max_lines=15)
                context_output = gr.Textbox(label="(2) 지식베이스 검색 결과", interactive=False, lines=5, max_lines=15)

    if MODELS_LOADED:
        submit_button.click(
            fn=gradio_interface_func,
            inputs=[image_input, question_input],
            outputs=[answer_output, desc_output, context_output]
        )
    else:
        gr.Markdown("## 🚨 모델 로딩 실패! 🚨 애플리케이션을 사용할 수 없습니다.")

if __name__ == "__main__":
    demo.launch()